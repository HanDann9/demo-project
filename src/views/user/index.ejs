<section style="background-color: #eee;">
  <div class="container py-5" style="width: 62rem;">
    <div class="card mb-3">
      <div class="row g-0">
        <div class="col-md-4 border border-light rounded">
          <div class="card-header align-items-center border border-light bg-info bg-gradient text-white rounded">
            <h2 class="fw-bold">Member</h2>
          </div>
          <div class="list-group list-group-light overflow-auto" data-mdb-perfect-scrollbar="true" style="height: 550px;">
            <a href="#" class="d-flex flex-row list-group-item list-group-item-action list-group-item-dark align-items-center border border-light">
              <div class="d-inline-flex position-relative me-2">
                <img class="rounded-circle" src="https://i.pinimg.com/564x/f0/a3/44/f0a344551001f7ed0f3022c3abae2560.jpg" alt="avatar 3" style="width: 40px; height: 40px;">
                <span class="position-absolute bottom-0 end-0 p-1 bg-danger border border-light rounded-circle status-icon-admin"></span>
              </div>
              <div class="d-flex flex-column">
                <span class="fw-bold">Admin</span>
                <span class="status-admin">Offline</span>
              </div>
            </a>
            <a href="#" class="d-flex flex-row list-group-item list-group-item-action align-items-center border border-light">
              <div class="position-relative me-2">
                <img class="rounded-circle" src="https://i.pinimg.com/564x/03/26/26/032626472f09ce0e02132a769cc2e559.jpg" alt="avatar 3" style="width: 40px; height: 40px;">
                <span class="position-absolute bottom-0 end-0 p-1 bg-danger bg-gradient border border-light rounded-circle status-icon-manager`"></span>
              </div>
              <div class="d-flex flex-column">
                <span class="fw-bold">Manager</span>
                <span class="status-manager">Offline</span>
              </div>
            </a>
          </div>
        </div>
        <div class="col-md-8">
          <div class="card-header border border-light bg-light bg-gradient d-flex flex-row align-items-center rounded">
            <div class="d-inline-flex position-relative me-2">
              <img class="rounded-circle" src="https://i.pinimg.com/564x/f0/a3/44/f0a344551001f7ed0f3022c3abae2560.jpg" alt="Avatar" style="width: 45px; height: 45px;">
              <span class="position-absolute bottom-0 end-0 p-1 bg-danger border border-light rounded-circle status-icon-admin"></span>
            </div>
            <div class="d-flex flex-column">
              <span class="fw-bold">Admin</span>
              <span class="status-admin">Online</span>
            </div>
          </div>
          <div class="card-body overflow-auto" data-mdb-perfect-scrollbar="true" id="chat" style="height: 500px;"></div>
          <form class="card-footer text-muted d-flex justify-content-start align-items-center p-2 rounded-3">
            <img class="rounded-circle me-2" src="https://i.pinimg.com/564x/03/26/26/032626472f09ce0e02132a769cc2e559.jpg" alt="avatar 3" style="width: 35px; height: 100%;">
            <input type="text" class="form-control form-control rounded-pill" id="msg" placeholder="Type message">
            <button class="border border-light bg-light ms-1" type="submit"><i class="fas fa-paper-plane"></i></i></button>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  const socket = io()
  const chatDiv = document.getElementById('chat');

  socket.auth = {
    username: 'user'
  };

  socket.connect();

  socket.on('users', users => {
    users.forEach(user => {
      if ($(`.li-${user.username}`)) {
        const statusIcon = user.connected ? 'bg-success' : 'bg-danger';
        const status = user.connected ? 'Online' : 'Offline';

        $(`.status-icon-${user.username}`).removeClass('bg-danger').addClass(statusIcon);
        $(`.status-${user.username}`).text(status);
      }
    });
  })

  // Join chatroom
  socket.emit('join room', {
    username: 'user',
    room: 'Room chat between admin and user',
  })

  // Get room and user
  socket.on('room users', ({
    room,
    user
  }) => {
    console.log(room, user);
  })

  socket.on('joined', (user) => {
    $('#chat').append(`<div class="hr-sect small">${user.content}</div>`)
  })

  socket.on('left', (user) => {
    $('#chat').append(`<div class="hr-sect small">${user.content}</div>`)
  })

  // Message from server
  socket.on('message', (data) => {
    console.log(data);
    if (data.username !== 'user') {
      const message = data.content;
      const lastChat = $('#chat > div:last');

      if (lastChat.attr('id') === 'receiver') {
        $('#chat > div:last > #message-receiver').append(`<p class="small p-2 ms-2 mb-1 text-break rounded-pill" style="background-color: #f5f6f7; max-width: max-content">${message}</p>`);
      } else {
        const messageHTML = `
          <div class="d-flex flex-row justify-content-start" id="receiver">
            <img class="rounded-circle" src="https://i.pinimg.com/564x/03/26/26/032626472f09ce0e02132a769cc2e559.jpg" alt="avatar 1" style="width: 40px; height: 100%;">
            <div class="d-flex align-items-start flex-column w-75" id="message-receiver">
              <p class="small p-2 ms-2 mb-1 rounded-pill text-break" style="background-color: #f5f6f7; max-width: max-content">${message}</p>
            </div>
          </div>
          <p class="small ms-5 mb-3 rounded-pill text-muted">${data.time}</p>
        `;

        chatDiv.innerHTML += messageHTML;
      }

      // Scroll to the bottom of the chat
      chatDiv.scrollTop = chatDiv.scrollHeight;
    }
  })

  const form = document.querySelector('form');

  // When the form is submitted
  form.addEventListener('submit', event => {
    event.preventDefault();

    let msg = event.target.elements.msg.value;

    msg = msg.trim();

    if (!msg) {
      return false;
    }

    // Render the message on the page
    const lastChat = $('#chat > div:last');

    if (lastChat.attr('id') === 'sender') {
      $('#chat > div:last > #message-sender').append(`<p class="small p-2 me-2 mb-1 text-white rounded-pill bg-primary text-break" style="max-width: max-content">${msg}</p>`);
    } else {
      const messageHTML = `
        <div class="d-flex flex-row justify-content-end pt-1" id="sender">
          <div class="d-flex align-items-end flex-column w-75" id="message-sender">
            <p class="small p-2 me-2 mb-1 text-white rounded-pill bg-primary mw-50 text-break" style="max-width: max-content">${msg}</p>
          </div>
          <img class="rounded-circle" src="https://i.pinimg.com/564x/f0/a3/44/f0a344551001f7ed0f3022c3abae2560.jpg" alt="avatar 3" style="width: 40px; height: 100%;">
        </div>
        <p class="small me-5 mt-0 mb-3 rounded-pill text-muted d-flex justify-content-end">${moment().format('h:mm a')}</p>
      `;

      chatDiv.innerHTML += messageHTML;
    }

    // Clear the input field and send the message to the server
    event.target.elements.msg.value = ''
    event.target.elements.msg.focus()

    socket.emit('chat message', msg)

    // Scroll to the bottom of the chat
    chatDiv.scrollTop = chatDiv.scrollHeight;
  });
</script>